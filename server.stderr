warning: unused import: `BufWriter`
 --> src/tournament_manager.rs:8:22
  |
8 | use std::io::{Write, BufWriter};
  |                      ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Player`
 --> src/persistence.rs:6:33
  |
6 | use crate::models::{Tournament, Player};
  |                                 ^^^^^^

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
  --> src/tournament_manager.rs:76:19
   |
76 |         use rand::thread_rng;
   |                   ^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
   --> src/tournament_manager.rs:898:19
    |
898 |         use rand::thread_rng;
    |                   ^^^^^^^^^^

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
  --> src/tournament_manager.rs:77:23
   |
77 |         let mut rng = thread_rng();
   |                       ^^^^^^^^^^

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
   --> src/tournament_manager.rs:899:23
    |
899 |         let mut rng = thread_rng();
    |                       ^^^^^^^^^^

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
   --> src/wolges_engine.rs:481:19
    |
481 |         use rand::thread_rng;
    |                   ^^^^^^^^^^

warning: use of deprecated function `rand::thread_rng`: Renamed to `rng`
   --> src/wolges_engine.rs:490:23
    |
490 |         let mut rng = thread_rng();
    |                       ^^^^^^^^^^

warning: unused variable: `path`
   --> src/routes.rs:297:5
    |
297 |     path: web::Path<Uuid>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_path`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `session`
   --> src/routes.rs:299:15
    |
299 |     let (res, session, _msg_stream) = actix_ws::handle(&req, stream)?;
    |               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session`

warning: unused variable: `engine`
   --> src/tournament_manager.rs:243:13
    |
243 |         let engine = self.engine.as_ref()
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `bag`
   --> src/tournament_manager.rs:249:13
    |
249 |         let bag = self.bags.get_mut(tournament_id)
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_bag`

warning: unused variable: `optimal_play`
   --> src/tournament_manager.rs:473:17
    |
473 |             let optimal_play = round.optimal_play.as_ref();
    |                 ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_optimal_play`

warning: unused variable: `in_racks`
    --> src/tournament_manager.rs:1144:17
     |
1144 |             let in_racks = tiles_in_racks.get(&tile).copied().unwrap_or(0);
     |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_in_racks`

warning: variable `last_round_status` is assigned to, but never used
    --> src/tournament_manager.rs:1170:13
     |
1170 |         let last_round_status;
     |             ^^^^^^^^^^^^^^^^^
     |
     = note: consider using `_last_round_status` instead

warning: value assigned to `last_round_status` is never read
    --> src/tournament_manager.rs:1181:13
     |
1181 |             last_round_status = last_round.status.clone();
     |             ^^^^^^^^^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?
     = note: `#[warn(unused_assignments)]` on by default

warning: variable does not need to be mutable
    --> src/tournament_manager.rs:1279:17
     |
1279 |             let mut bag = bag::Bag::new(alphabet);
     |                 ----^^^
     |                 |
     |                 help: remove this `mut`
     |
     = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `word_str`
   --> src/wolges_engine.rs:269:17
    |
269 |             let word_str = convert_internal_to_digraphs(&tiles_only);
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_word_str`

warning: unused variable: `tournament_id`
  --> src/persistence.rs:67:31
   |
67 |     pub fn get_tournament_dir(tournament_id: &str, name: &str) -> PathBuf {
   |                               ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_tournament_id`

warning: method `get_random_rack` is never used
   --> src/wolges_engine.rs:469:12
    |
34  | impl WolgesEngine {
    | ----------------- method in this implementation
...
469 |     pub fn get_random_rack(&self) -> String {
    |            ^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated functions `new` and `log_event` are never used
   --> src/persistence.rs:59:12
    |
58  | impl PersistenceManager {
    | ----------------------- associated functions in this implementation
59  |     pub fn new() -> Self {
    |            ^^^
...
277 |     pub fn log_event(tournament_id: &str, event: &str) -> Result<(), Box<dyn std::error::Error>> {
    |            ^^^^^^^^^

warning: `wolges-tournament-server` (bin "wolges-tournament-server") generated 21 warnings (run `cargo fix --bin "wolges-tournament-server"` to apply 3 suggestions)
    Finished `release` profile [optimized] target(s) in 0.45s
     Running `target/release/wolges-tournament-server`
[2025-08-15T23:53:11Z INFO  wolges_tournament_server] Starting Spanish Scrabble Duplicate Tournament Server (HTTP)...
[2025-08-15T23:53:11Z INFO  wolges_tournament_server] Dictionary FISE2016_converted.kwg loaded successfully on startup
Error: Os { code: 48, kind: AddrInUse, message: "Address already in use" }
